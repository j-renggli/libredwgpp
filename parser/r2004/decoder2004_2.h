#pragma once

#include "../decoder.h"

namespace libredwg2 {

class Archive;
class DWGBuffer;
class Page;
class SectionMap;

class Decoder2004_2 : public Decoder
{
  ////////////////////////////////////////////////////////////////
  // Definitions
  ////////////////////////////////////////////////////////////////
  public:

  ////////////////////////////////////////////////////////////////
  // Members
  ////////////////////////////////////////////////////////////////
  private:

  ////////////////////////////////////////////////////////////////
  // Constructors & Destructor
  ////////////////////////////////////////////////////////////////
  public:
    virtual ~Decoder2004_2() {}

  ////////////////////////////////////////////////////////////////
  // Operators
  ////////////////////////////////////////////////////////////////
  private:

  ////////////////////////////////////////////////////////////////
  // Functions
  ////////////////////////////////////////////////////////////////
  public:
    virtual core::ResultCode decode(DWGBuffer& raw, core::IWriteBuffer& out);

    core::ResultCode decode(Archive& archive, const SectionMap& map, const std::vector<Page>& vPages, DWGBuffer& buffer);

  private:
    uint32_t readLiteralLength(DWGBuffer& in, uint8_t& opcode);

    uint32_t readOffset2b(DWGBuffer& in, uint32_t& litlen);

    uint32_t readOffsetLong(DWGBuffer& in);
};

////////////////////////////////////////////////////////////////

}
