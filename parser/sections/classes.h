#pragma once

#include "../class.h"
#include "../version.h"

namespace libredwg2 {

class DWGBuffer;

class ClassesParser
{
  ////////////////////////////////////////////////////////////////
  // Definitions
  ////////////////////////////////////////////////////////////////
  private:
    typedef std::vector<Class> ClassVector;

  ////////////////////////////////////////////////////////////////
  // Members
  ////////////////////////////////////////////////////////////////
  private:
    Version version_;

    ClassVector vClasses_;

  ////////////////////////////////////////////////////////////////
  // Constructors & Destructor
  ////////////////////////////////////////////////////////////////
  public:
    ClassesParser(const Version& version);

//    SectionClasses(Archive& archive, const std::vector<Page>& multiple);

    virtual ~ClassesParser() {}

  ////////////////////////////////////////////////////////////////
  // Operators
  ////////////////////////////////////////////////////////////////
  private:

  ////////////////////////////////////////////////////////////////
  // Functions
  ////////////////////////////////////////////////////////////////
  public:
    const std::vector<Class>& getClasses() const { return vClasses_; }

    core::ResultCode restore(DWGBuffer& buffer);
};

////////////////////////////////////////////////////////////////

}
