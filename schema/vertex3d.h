#pragma once

#include "../includes.h"

namespace libredwgpp {

class Vertex3d
{
  ////////////////////////////////////////////////////////////////
  // Definitions
  ////////////////////////////////////////////////////////////////
  public:

  ////////////////////////////////////////////////////////////////
  // Members
  ////////////////////////////////////////////////////////////////
  private:
    double position_[3];

  ////////////////////////////////////////////////////////////////
  // Constructors & Destructor
  ////////////////////////////////////////////////////////////////
  public:
    Vertex3d()
    {
      position_[0] = 0.;
      position_[1] = 0.;
      position_[2] = 0.;
    }

    Vertex3d(double x, double y, double z)
    {
      position_[0] = x;
      position_[1] = y;
      position_[2] = z;
    }

  ////////////////////////////////////////////////////////////////
  // Operators
  ////////////////////////////////////////////////////////////////
  public:
    bool operator<(const Vertex3d& vertex) const
    {
      for (int i = 0; i < 3; ++i)
      {
        if (position_[i] < vertex.position_[i])
          return true;
        else if (position_[i] > vertex.position_[i])
          return false;
      }

      return false;
    }

  ////////////////////////////////////////////////////////////////
  // Functions
  ////////////////////////////////////////////////////////////////
  public:
    double get(size_t index) const { return position_[index]; }

};

////////////////////////////////////////////////////////////////

}
